// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _07_AziendaApi.Data;

#nullable disable

namespace _07_AziendaApi.Migrations
{
    [DbContext(typeof(AziendaDbContext))]
    [Migration("20230509102808_ToSQLServerMigration")]
    partial class ToSQLServerMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_07_AziendaApi.Model.Azienda", b =>
                {
                    b.Property<int>("AziendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AziendaId"));

                    b.Property<string>("Indirizzo")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AziendaId");

                    b.ToTable("Aziende");

                    b.HasData(
                        new
                        {
                            AziendaId = 1,
                            Indirizzo = "One Microsoft Way, Redmond, WA 98052, Stati Uniti",
                            Nome = "Microsoft"
                        },
                        new
                        {
                            AziendaId = 2,
                            Indirizzo = "1600 Amphitheatre Pkwy, Mountain View, CA 94043, Stati Uniti",
                            Nome = "Google"
                        },
                        new
                        {
                            AziendaId = 3,
                            Indirizzo = "1 Apple Park Way Cupertino, California, 95014-0642 United States",
                            Nome = "Apple"
                        });
                });

            modelBuilder.Entity("_07_AziendaApi.Model.Prodotto", b =>
                {
                    b.Property<int>("ProdottoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdottoId"));

                    b.Property<int>("AziendaId")
                        .HasColumnType("int");

                    b.Property<string>("Descrizione")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProdottoId");

                    b.HasIndex("AziendaId");

                    b.ToTable("Prodotti");

                    b.HasData(
                        new
                        {
                            ProdottoId = 1,
                            AziendaId = 1,
                            Descrizione = "Applicazione per la gestione delle Note",
                            Nome = "SuperNote"
                        },
                        new
                        {
                            ProdottoId = 2,
                            AziendaId = 1,
                            Descrizione = "Applicazione per la visione di film in streaming",
                            Nome = "My Cinema"
                        },
                        new
                        {
                            ProdottoId = 3,
                            AziendaId = 2,
                            Descrizione = "Applicazione per il cad 3d",
                            Nome = "SuperCad"
                        });
                });

            modelBuilder.Entity("_07_AziendaApi.Model.SviluppaProdotto", b =>
                {
                    b.Property<int>("SviluppatoreId")
                        .HasColumnType("int");

                    b.Property<int>("ProdottoId")
                        .HasColumnType("int");

                    b.HasKey("SviluppatoreId", "ProdottoId");

                    b.HasIndex("ProdottoId");

                    b.ToTable("SviluppaProdotti");

                    b.HasData(
                        new
                        {
                            SviluppatoreId = 1,
                            ProdottoId = 1
                        },
                        new
                        {
                            SviluppatoreId = 2,
                            ProdottoId = 1
                        },
                        new
                        {
                            SviluppatoreId = 3,
                            ProdottoId = 3
                        });
                });

            modelBuilder.Entity("_07_AziendaApi.Model.Sviluppatore", b =>
                {
                    b.Property<int>("SviluppatoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SviluppatoreId"));

                    b.Property<int>("AziendaId")
                        .HasColumnType("int");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("SviluppatoreId");

                    b.HasIndex("AziendaId");

                    b.ToTable("Sviluppatori");

                    b.HasData(
                        new
                        {
                            SviluppatoreId = 1,
                            AziendaId = 1,
                            Cognome = "Rossi",
                            Nome = "Mario"
                        },
                        new
                        {
                            SviluppatoreId = 2,
                            AziendaId = 1,
                            Cognome = "Verdi",
                            Nome = "Giulio"
                        },
                        new
                        {
                            SviluppatoreId = 3,
                            AziendaId = 2,
                            Cognome = "Bianchi",
                            Nome = "Leonardo"
                        });
                });

            modelBuilder.Entity("_07_AziendaApi.Model.Prodotto", b =>
                {
                    b.HasOne("_07_AziendaApi.Model.Azienda", "Azienda")
                        .WithMany("Prodotti")
                        .HasForeignKey("AziendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Azienda");
                });

            modelBuilder.Entity("_07_AziendaApi.Model.SviluppaProdotto", b =>
                {
                    b.HasOne("_07_AziendaApi.Model.Prodotto", "Prodotto")
                        .WithMany("SviluppaProdotti")
                        .HasForeignKey("ProdottoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("_07_AziendaApi.Model.Sviluppatore", "Sviluppatore")
                        .WithMany("SviluppaProdotti")
                        .HasForeignKey("SviluppatoreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Prodotto");

                    b.Navigation("Sviluppatore");
                });

            modelBuilder.Entity("_07_AziendaApi.Model.Sviluppatore", b =>
                {
                    b.HasOne("_07_AziendaApi.Model.Azienda", "Azienda")
                        .WithMany("Sviluppatori")
                        .HasForeignKey("AziendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Azienda");
                });

            modelBuilder.Entity("_07_AziendaApi.Model.Azienda", b =>
                {
                    b.Navigation("Prodotti");

                    b.Navigation("Sviluppatori");
                });

            modelBuilder.Entity("_07_AziendaApi.Model.Prodotto", b =>
                {
                    b.Navigation("SviluppaProdotti");
                });

            modelBuilder.Entity("_07_AziendaApi.Model.Sviluppatore", b =>
                {
                    b.Navigation("SviluppaProdotti");
                });
#pragma warning restore 612, 618
        }
    }
}
