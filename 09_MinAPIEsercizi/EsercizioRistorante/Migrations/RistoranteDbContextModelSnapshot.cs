// <auto-generated />
using System;
using EsercizioRistorante.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EsercizioRistorante.Migrations
{
    [DbContext(typeof(RistoranteDbContext))]
    partial class RistoranteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EsercizioRistorante.Model.Chef", b =>
                {
                    b.Property<int>("ChefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataDiNascita")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ChefId");

                    b.ToTable("Chefs");

                    b.HasData(
                        new
                        {
                            ChefId = 1,
                            DataDiNascita = new DateTime(2023, 5, 21, 18, 37, 2, 882, DateTimeKind.Utc).AddTicks(8972),
                            Nome = "nome 1"
                        },
                        new
                        {
                            ChefId = 2,
                            DataDiNascita = new DateTime(2023, 5, 21, 18, 37, 2, 882, DateTimeKind.Utc).AddTicks(8975),
                            Nome = "nome 2"
                        },
                        new
                        {
                            ChefId = 3,
                            DataDiNascita = new DateTime(2023, 5, 21, 18, 37, 2, 882, DateTimeKind.Utc).AddTicks(8976),
                            Nome = "nome 3"
                        });
                });

            modelBuilder.Entity("EsercizioRistorante.Model.Piatto", b =>
                {
                    b.Property<int>("PiattoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Costo")
                        .HasColumnType("int");

                    b.Property<string>("NomePiatto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RistoranteId")
                        .HasColumnType("int");

                    b.HasKey("PiattoId");

                    b.HasIndex("RistoranteId");

                    b.ToTable("Piattos");

                    b.HasData(
                        new
                        {
                            PiattoId = 1,
                            Costo = 10,
                            NomePiatto = "piatto 1",
                            RistoranteId = 1
                        },
                        new
                        {
                            PiattoId = 2,
                            Costo = 20,
                            NomePiatto = "piatto 2",
                            RistoranteId = 2
                        },
                        new
                        {
                            PiattoId = 3,
                            Costo = 15,
                            NomePiatto = "piatto 3",
                            RistoranteId = 3
                        });
                });

            modelBuilder.Entity("EsercizioRistorante.Model.Portata", b =>
                {
                    b.Property<int>("PiattoId")
                        .HasColumnType("int");

                    b.Property<int>("ChefId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroPorzioni")
                        .HasColumnType("int");

                    b.HasKey("PiattoId", "ChefId");

                    b.HasIndex("ChefId");

                    b.ToTable("Portatas");

                    b.HasData(
                        new
                        {
                            PiattoId = 1,
                            ChefId = 1,
                            NumeroPorzioni = 5
                        },
                        new
                        {
                            PiattoId = 2,
                            ChefId = 2,
                            NumeroPorzioni = 15
                        },
                        new
                        {
                            PiattoId = 3,
                            ChefId = 3,
                            NumeroPorzioni = 10
                        });
                });

            modelBuilder.Entity("EsercizioRistorante.Model.Ristorante", b =>
                {
                    b.Property<int>("RistoranteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Città")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RistoranteId");

                    b.ToTable("Ristorantes");

                    b.HasData(
                        new
                        {
                            RistoranteId = 1,
                            Città = "milano",
                            Nome = "nome 1"
                        },
                        new
                        {
                            RistoranteId = 2,
                            Città = "roma",
                            Nome = "nome 2"
                        },
                        new
                        {
                            RistoranteId = 3,
                            Città = "napoli",
                            Nome = "nome 3"
                        });
                });

            modelBuilder.Entity("EsercizioRistorante.Model.Piatto", b =>
                {
                    b.HasOne("EsercizioRistorante.Model.Ristorante", "Ristorante")
                        .WithMany("Piattos")
                        .HasForeignKey("RistoranteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ristorante");
                });

            modelBuilder.Entity("EsercizioRistorante.Model.Portata", b =>
                {
                    b.HasOne("EsercizioRistorante.Model.Chef", "Chef")
                        .WithMany("Portatas")
                        .HasForeignKey("ChefId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EsercizioRistorante.Model.Piatto", "Piatto")
                        .WithMany("Portatas")
                        .HasForeignKey("PiattoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Chef");

                    b.Navigation("Piatto");
                });

            modelBuilder.Entity("EsercizioRistorante.Model.Chef", b =>
                {
                    b.Navigation("Portatas");
                });

            modelBuilder.Entity("EsercizioRistorante.Model.Piatto", b =>
                {
                    b.Navigation("Portatas");
                });

            modelBuilder.Entity("EsercizioRistorante.Model.Ristorante", b =>
                {
                    b.Navigation("Piattos");
                });
#pragma warning restore 612, 618
        }
    }
}
